/*
 *	DRAW INTENSITY PLOT FOR A SNV
 *	=============================
 *
 *	This script will take as input an illumina gsgt dataset, and a 
 *	SNV id, and then draw a plot of the intensity (X,Y) values across
 *	all samples in the dataset for this fixed SNV. 
 *
 ********************************************************************/

nextflow.enable.dsl=2

params.numberOfInputFiles = 10
params.inputFileDir = '/mnt/lustre3p/groups/CBBI1243/SADaCC/ambroise-data/gwas-cameroon/2018-10-28/'
params.inputFilePrefix = 'WTS_H3Africa_Wonkam_2018.04'

params.snvName = params.snv ? params.snv : '200610-1'

params.outputDir = '/mnt/lustre3p/users/jmorrice/projects/test-h3agwas/output/'

workflow {

    channel
        .fromPath(
            params.inputFileDir + params.inputFilePrefix + '_gtReport_File-*')
        .set{ genotypeDataFiles }

    genotypeDataFiles | filterRecordsForChosenSnv | set{ genotypeDataFilesForChosenSnv }

    genotypeDataForChosenSnv\
        = concatenateDataFiles(
            genotypeDataFilesForChosenSnv
                .collect())

    plotXYintensityData(
        genotypeDataForChosenSnv)


}

process filterRecordsForChosenSnv() {
    input:
        path genotypeDataFile
    output:
        path "${genotypeDataFile}.xy.csv"
    script:
        """
        zcat ${genotypeDataFile} | grep "${params.snvName}," > ${genotypeDataFile}.xy.csv
        """
}

process concatenateDataFiles {
    input:
        path dataFiles
    output:
        path "${params.snvName}.csv"
    script:
        """
        echo 'SNP Name,Sample ID,Allele1 - Top,Allele2 - Top,GC Score,X,Y,B Allele Freq,Log R Ratio' > ${params.snvName}.csv
        cat ${params.inputFilePrefix}* >> ${params.snvName}.csv
        """
}

process plotXYintensityData {
    publishDir "${params.outputDir}", mode: 'copy'

    input:
        path genotypeDataForChosenSnv
    output:
        path "${params.snvName}_XYplot.pdf"
    script:
	"""
	#!/usr/bin/env Rscript --vanilla
	library(tidyverse)
	snvdata <- read.csv(file="${genotypeDataForChosenSnv}")
	ggplot(snvdata, aes(x=X,y=Y)) + geom_point()
	ggsave("${params.snvName}_XYplot.pdf")
	"""
}
