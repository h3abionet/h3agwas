/*
 *	TEST COHORT GENOTYPE TO PHENOTYPE ASSOCIATIONS
 *	==============================================
 *
 *	This script runs an initial association test for your input data.
 *	Specifically, it draws manhattan and QQ plots for the selected
 *	cohort data (e.g. "input", "sampleFiltered", "snvFiltered"...), 
 *  and outputs an association report from
 *  plink, which you can find in the output directory under 
 *  <cohort name>.assoc. The report will be saved in the folder with 
 *  the other reports from the associationInput step you have chosen:
 *  for example, if you are performing this test using the
 *  'sampleFiltered' data, then this assocation report will be saved
 *  in:
 *  /path/to/output/sampleFiltered/reports/<cohort name>.assoc.
 *
 *	The cohort data is:
 *		+ <cohort name>.<association input>.bed
 *		+ <cohort name>.<association input>.bim
 *		+ <cohort name>.<association input>.fam
 *
 *  It is considered good practice to perform this association test
 *  after *every* quality control step in this pipeline. This way you
 *  will see the many associations in the begining are cut away for 
 *  poor quality and you will be left only with those associated snvs
 *  of high significance and good quality. 
 *
 *	The association report is generated by a call to plink. 
 *
 ********************************************************************/
nextflow.enable.dsl=2

include {
    printWorkflowExitMessage;
    collectPlotsTogetherAndZip;
} from "${projectDir}/modules/base.nf"

include {
    checkInputParams;
	getInputChannels;
	getAssociationReport;
	drawManhattanPlot;
	drawQqPlot;
	sendWorkflowExitEmail;
} from "${projectDir}/modules/association.nf"

workflow {

    checkInputParams()

	cohortData = getInputChannels()

	associationReport \
        = getAssociationReport(
            cohortData)

	manhattanPlot \
        = drawManhattanPlot(
            associationReport)

	qqPlot \
        = drawQqPlot(
            associationReport)

    plots = channel
        .empty().mix(
            manhattanPlot,
            qqPlot)
        .collect()

    collectPlotsTogetherAndZip(
        "association-" + params.associationInput,
        plots)

}

workflow.onComplete {
    printWorkflowExitMessage()
    sendWorkflowExitEmail()
}
